{"remainingRequest":"C:\\Users\\USER\\nodejs\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\USER\\nodejs\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\USER\\nodejs\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\nodejs\\frontend\\src\\pages\\Layout\\SidebarSharePlugin.vue?vue&type=template&id=745c5ab2&scoped=true&","dependencies":[{"path":"C:\\Users\\USER\\nodejs\\frontend\\src\\pages\\Layout\\SidebarSharePlugin.vue","mtime":1638784931206},{"path":"C:\\Users\\USER\\nodejs\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\nodejs\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\USER\\nodejs\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\nodejs\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgewogICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgewogICAgICAgICAgbmFtZTogImNsaWNrLW91dHNpZGUiLAogICAgICAgICAgcmF3TmFtZTogInYtY2xpY2stb3V0c2lkZSIsCiAgICAgICAgICB2YWx1ZTogX3ZtLmNsb3NlRHJvcERvd24sCiAgICAgICAgICBleHByZXNzaW9uOiAiY2xvc2VEcm9wRG93biIsCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgc3RhdGljQ2xhc3M6ICJmaXhlZC1wbHVnaW4iLAogICAgfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImRyb3Bkb3duIHNob3ctZHJvcGRvd24iLCBjbGFzczogeyBzaG93OiBfdm0uaXNPcGVuIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzZXR0aW5ncy1pY29uIiwKICAgICAgICAgICAgICBhdHRyczogeyAiZGF0YS10b2dnbGUiOiAiZHJvcGRvd24iIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiaSIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZmEgZmEtY29nIGZhLTJ4IiwKICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0udG9nZ2xlRHJvcERvd24gfSwKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAidWwiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiZHJvcGRvd24tbWVudSIsIGNsYXNzOiB7IHNob3c6IF92bS5pc09wZW4gfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImxpIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci10aXRsZSIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJTaWRlYmFyIEJhY2tncm91bmQiKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygibGkiLCB7IHN0YXRpY0NsYXNzOiAiYWRqdXN0bWVudHMtbGluZSIgfSwgWwogICAgICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAic3dpdGNoLXRyaWdnZXIgYmFja2dyb3VuZC1jb2xvciIgfSwgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiYmFkZ2UtY29sb3JzIHRleHQtY2VudGVyIiB9LAogICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0uc2lkZWJhckNvbG9ycywgZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygic3BhbiIsIHsKICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBpdGVtLmNvbG9yLAogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJhZGdlIGZpbHRlciIsCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBbImJhZGdlLSIgKyBpdGVtLmNvbG9yLCB7IGFjdGl2ZTogaXRlbS5hY3RpdmUgfV0sCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJkYXRhLWNvbG9yIjogaXRlbS5jb2xvciB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNoYW5nZVNpZGViYXJCYWNrZ3JvdW5kKGl0ZW0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNsZWFyZml4IiB9KSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJsaSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiU2lkZWJhciBNaW5pIiksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImxpIiwgeyBzdGF0aWNDbGFzczogImFkanVzdG1lbnRzLWxpbmUiIH0sIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInRvZ2dsZWJ1dHRvbiBzd2l0Y2gtc2lkZWJhci1taW5pIiB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibGFiZWwtc3dpdGNoIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIk9GRiIpLAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJiYXNlLXN3aXRjaCIsIHsKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGlucHV0OiBfdm0ubWluaW1pemVTaWRlYmFyIH0sCiAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNpZGViYXJNaW5pLAogICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zaWRlYmFyTWluaSA9ICQkdgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAic2lkZWJhck1pbmkiLAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJsYWJlbC1zd2l0Y2ggbGFiZWwtcmlnaHQiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiT04iKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInRvZ2dsZWJ1dHRvbiBzd2l0Y2gtY2hhbmdlLWNvbG9yIG10LTMiIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJsYWJlbC1zd2l0Y2giIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiTElHSFQgTU9ERSIpLAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJiYXNlLXN3aXRjaCIsIHsKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGlucHV0OiBfdm0udG9nZ2xlTW9kZSB9LAogICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5kYXJrTW9kZSwKICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICgkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZGFya01vZGUgPSAkJHYKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImRhcmtNb2RlIiwKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibGFiZWwtc3dpdGNoIGxhYmVsLXJpZ2h0IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIkRBUksgTU9ERSIpLAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fbSgwKSwKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICBdCiAgICAgICksCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImxpIiwgeyBzdGF0aWNDbGFzczogImJ1dHRvbi1jb250YWluZXIgbXQtNCIgfSwgWwogICAgICBfYygKICAgICAgICAiYSIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWRlZmF1bHQgYnRuLWJsb2NrIGJ0bi1yb3VuZCIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBocmVmOiAiaHR0cHM6Ly9kZW1vcy5jcmVhdGl2ZS10aW0uY29tL3Z1ZS1ibGFjay1kYXNoYm9hcmQtcHJvL2RvY3VtZW50YXRpb24iLAogICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICByZWw6ICJub29wZW5lciIsCiAgICAgICAgICB9LAogICAgICAgIH0sCiAgICAgICAgW192bS5fdigiIERvY3VtZW50YXRpb24gIildCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJhIiwKICAgICAgICB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2sgYnRuLXJvdW5kIiwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIGhyZWY6ICJodHRwczovL2NyZWF0aXZlLXRpbS5jb20vcHJvZHVjdC92dWUtYmxhY2stZGFzaGJvYXJkLXBybyIsCiAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIiwKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICBbX3ZtLl92KCIgQnV5IGZvciAkNTkgIildCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJhIiwKICAgICAgICB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4taW5mbyBidG4tYmxvY2sgYnRuLXJvdW5kIiwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIGhyZWY6ICJodHRwczovL2RlbW9zLmNyZWF0aXZlLXRpbS5jb20vdnVlLWJsYWNrLWRhc2hib2FyZCIsCiAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIiwKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICBbX3ZtLl92KCIgRnJlZSBWZXJzaW9uICIpXQogICAgICApLAogICAgXSkKICB9LApdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}